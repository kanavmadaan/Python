from ftplib import FTP
import shutil
import os
import telnetlib
import time
import serial

print("""
EQX-FC Automation
by Kanav Madaan
######      #####
#          #
####      #
#         #
#          #####

""")
print("\n\n")
myport = input("Enter COM port of FC:\n")
time.sleep(3)


def fwcopy():
    shutil.copy(
        r"\\burlington.evertz.tv\Test\Firmware\EQX_series\EQX\EQX-FC\Firmware\RPC_v4\b309\EQXFC-rpc-4net_B309.bin",
        r"./RPC FC.bin")
    print("Copying file from Remote Location...")
    time.sleep(1)
    print("Hang on!!....")
    time.sleep(2)


def portIsUsable(myport):
    try:
        ser = serial.Serial(port=myport)
        return 1
    except serial.SerialException:
        return 0


def sconfig():
    print("IP configuration in proccess via Serial port")
    sp = serial.Serial(port=myport, baudrate=115200, bytesize=8, timeout=2, stopbits=serial.STOPBITS_ONE)

    if sp.is_open:
        sp.write(b"x\r\n")
        time.sleep(1)
        sp.write(b"x\r\n")
        time.sleep(1)
        sp.write(b"x\r\n")
        time.sleep(1)
        sp.write(b"1\r\n")
        time.sleep(1)
        sp.write(b"1\r\n")
        time.sleep(1)
        sp.write(b"192.")
        time.sleep(1)
        sp.write(b"168.")
        time.sleep(1)
        sp.write(b"0.")
        time.sleep(1)
        sp.write(b"200\r\n")
        time.sleep(1)
        sp.write(b"2\r\n")
        time.sleep(1)
        sp.write(b"y\r\n")
        time.sleep(1)
        sp.write(b"3\r\n")
        time.sleep(1)
        sp.write(b"255.")
        time.sleep(1)
        sp.write(b"255.")
        time.sleep(1)
        sp.write(b"255.")
        time.sleep(1)
        sp.write(b"0\r\n")
        time.sleep(1)
        sp.write(b"s\r\n")
        time.sleep(1)
        sp.write(b"x\r\n")
        time.sleep(1)
        sp.write(b"x\r\n")
        time.sleep(1)
        sp.write(b"6\r\n")
        time.sleep(1)
        sp.write(b"33\r\n")
        time.sleep(1)
        sp.write(b"y\r\n")
        time.sleep(1)
        sp.close()
        print("FC Rebooting")
        time.sleep(40)


def fwtrans():
    fc = FTP("192.168.0.200")
    print("Connected to FC 192.168.0.200")
    fc.login()
    fc.cwd('/')
    fc.cwd('[boot]')
    fw = open("./RPC FC.bin", 'rb')
    print("FW Transferring...")
    fc.storbinary('STOR RPC 309.bin', fw)
    fw.close()
    os.remove("./RPC FC.bin")
    fc = telnetlib.Telnet("192.168.0.200", 23)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"6\r\n")
    time.sleep(1)
    fc.write(b"33\r\n")
    time.sleep(1)
    fc.write(b"y\r\n")
    time.sleep(1)
    fc.close()
    time.sleep(90)


def ipconf():
    print("IP configuration in proccess")
    # print fc.read_until(">")

    # IP_Setting
    fc = telnetlib.Telnet("192.168.0.200", 23)
    fc.write(b"1\r\n")
    time.sleep(1)
    fc.write(b"1\r\n")
    time.sleep(1)
    fc.write(b"192.168.0.200\r\n")
    time.sleep(1)
    fc.write(b"2\r\n")
    time.sleep(1)
    fc.write(b"y\r\n")
    time.sleep(1)
    fc.write(b"3\r\n")
    time.sleep(1)
    fc.write(b"255.255.255.0\r\n")
    time.sleep(1)
    fc.write(b"7\r\n")
    time.sleep(1)
    fc.write(b"192.168.1.201\r\n")
    time.sleep(1)
    fc.write(b"8\r\n")
    time.sleep(1)
    fc.write(b"y\r\n")
    time.sleep(1)
    fc.write(b"9\r\n")
    time.sleep(1)
    fc.write(b"192.168.1.200\r\n")
    time.sleep(1)
    fc.write(b"10\r\n")
    time.sleep(1)
    fc.write(b"255.255.255.0\r\n")
    time.sleep(1)
    fc.write(b"12\r\n")
    time.sleep(1)
    fc.write(b"y\r\n")
    time.sleep(1)
    fc.write(b"13\r\n")
    time.sleep(1)
    fc.write(b"192.168.2.200\r\n")
    time.sleep(1)
    fc.write(b"14\r\n")
    time.sleep(1)
    fc.write(b"255.255.255.0\r\n")
    time.sleep(1)
    fc.write(b"16\r\n")
    time.sleep(1)
    fc.write(b"y\r\n")
    time.sleep(1)
    fc.write(b"17\r\n")
    time.sleep(1)
    fc.write(b"192.168.8.200\r\n")
    time.sleep(1)
    fc.write(b"18\r\n")
    time.sleep(1)
    fc.write(b"255.255.255.0\r\n")
    time.sleep(1)
    fc.write(b"21\r\n")
    time.sleep(1)
    fc.write(b"1\r\n")
    time.sleep(1)
    fc.write(b"22\r\n")
    time.sleep(1)
    fc.write(b"2\r\n")
    time.sleep(1)
    fc.write(b"s\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"3\r\n")
    time.sleep(1)
    fc.write(b"2\r\n")
    time.sleep(1)
    fc.write(b"2\r\n")
    time.sleep(1)
    fc.write(b"private\r\n")
    time.sleep(1)
    fc.write(b"s\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.write(b"x\r\n")
    time.sleep(1)
    fc.close()


def rtcconf():
    # RTC
    print("RTC in proccess")
    fct = telnetlib.Telnet("192.168.0.200", 23)
    fct.write(b"x\r\n")
    time.sleep(1)
    fct.write(b"x\r\n")
    time.sleep(1)
    fct.write(b"x\r\n")
    time.sleep(1)
    fct.write(b"6\r\n")
    time.sleep(1)
    fct.write(b"7\r\n")
    time.sleep(1)
    fct.write(b"2\r\n")
    time.sleep(1)
    fct.write(str(time.localtime().tm_year).encode() + b"\r\n")
    time.sleep(1)
    fct.write(str(time.localtime().tm_mon).encode() + b"\r\n")
    time.sleep(1)
    fct.write(str(time.localtime().tm_mday).encode() + b"\r\n")
    time.sleep(1)
    fct.write(str(time.localtime().tm_hour).encode() + b"\r\n")
    time.sleep(1)
    fct.write(str(time.localtime().tm_min).encode() + b"\r\n")
    time.sleep(1)
    fct.write(str(time.localtime().tm_sec).encode() + b"\r\n")
    time.sleep(1)
    fct.write(b"3\r\n")
    time.sleep(1)
    fct.write(b"100\r\n")
    time.sleep(4)
    fct.write(b"4\r\n")
    time.sleep(1)
    fct.write(b"100\r\n")
    time.sleep(1)
    fct.write(b"A8\r\n")
    time.sleep(1)
    fct.write(b"3\r\n")
    time.sleep(1)
    fct.write(b"100\r\n")
    time.sleep(4)
    fct.write(b"x\r\n")
    time.sleep(1)
    fct.close()


def sramconf():
    # SRAM
    fctel = telnetlib.Telnet("192.168.0.200", 23)
    print("SRAM in proccess")
    fctel.write(b"6\r\n")
    time.sleep(1)
    fctel.write(b"3\r\n")
    time.sleep(1)
    fctel.write(b"y\r\n")
    time.sleep(5)
    fctel.write(b"x\r\n")
    time.sleep(1)
    fctel.close()


def cflash():
    print("CompactFlash in proccess")
    fctn = telnetlib.Telnet("192.168.0.200", 23)
    fctn.write(b"8\r\n")
    time.sleep(1)
    fctn.write(b"9\r\n")
    time.sleep(1)
    fctn.write(b"y\r\n")
    time.sleep(5)
    fctn.write(b"4\r\n")
    time.sleep(1)
    fctn.write(b"test_file\r\n")
    time.sleep(1)
    fctn.write(b"0123456789\r\n")
    time.sleep(5)
    fctn.write(b"2\r\n")
    time.sleep(15)
    fctn.write(b"6\r\n")
    time.sleep(1)
    fctn.write(b"test_file\r\n")
    time.sleep(15)
    fctn.write(b"5\r\n")
    time.sleep(1)
    fctn.write(b"test_file\r\n")
    time.sleep(1)
    fctn.write(b"2\r\n")
    time.sleep(15)
    fctn.write(b"6\r\n")
    time.sleep(1)
    fctn.write(b"test__file\r\n")
    time.sleep(15)
    fctn.write(b"x\r\n")
    time.sleep(1)
    fctn.close()


def reboot_FC():
    print("Rebooting FC")
    fcreb = telnetlib.Telnet("192.168.0.200", 23)
    fcreb.write(b"x\r\n")
    time.sleep(1)
    fcreb.write(b"x\r\n")
    time.sleep(1)
    fcreb.write(b"x\r\n")
    time.sleep(1)
    fcreb.write(b"x\r\n")
    time.sleep(1)
    fcreb.write(b"6\r\n")
    time.sleep(1)
    fcreb.write(b"39\r\n")
    time.sleep(1)
    fcreb.write(b"y\r\n")
    time.sleep(10)
    fcreb.close()


portIsUsable(myport)

if portIsUsable(myport) == 1:
    print("Port in good hands now!!")
    fwcopy()
    sconfig()
    fwtrans()
    ipconf()
    rtcconf()
    sramconf()
    cflash()
    reboot_FC()

elif portIsUsable(myport) == 0:
    while portIsUsable(myport) == 0:
        print('port already open')
        time.sleep(3)
        portIsUsable(myport)
    if portIsUsable(myport) == 1:
        print("Port in good hands now!!")
        fwcopy()
        sconfig()
        fwtrans()
        ipconf()
        rtcconf()
        sramconf()
        cflash()
        reboot_FC()
